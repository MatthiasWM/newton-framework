/*	File:		UnicodePrivate.h	Contains:	Header information for Unicode mapping.	Written by:	Newton Research Group.*/#if !defined(__UNICODEPRIVATE_H)#define __UNICODEPRIVATE_H 1extern bool					gHasUnicode;				// 0C104EDCextern bool					gUnicodeInited;			// 0C104EE0extern const UniChar *	gASCIItoUnicodeTable;	// 0C104EE4extern const char *		gASCIIBreakTable;			// 0C104EE8typedef struct{	char x00;	char scheme;	const UniChar * unicode;	const char * isDelimiter;} PlatformEncoding;#if defined(__cplusplus)extern "C" {#endiftypedef struct{	UShort		formatID;	ArrayIndex	unicodeTableSize;	int			revision;	int			tableInfo;	void *		charCodes;	UniChar *	startCodes;	UniChar *	endCodes;	SShort *		codeDeltas;} EncodingMap;typedef void (*ConvertFromUnicodeProcPtr) (const UniChar *, void *, void *, ArrayIndex);typedef void (*ConvertToUnicodeProcPtr) (const void *, UniChar *, void *, ArrayIndex);void	GetMappingInfo(void * table, EncodingMap * map, ProcPtr * mapFunction);void	InstallCharEncoding(UShort encoding,				EncodingMap * fromUnicodeMapData, EncodingMap * toUnicodeMapData, 				ConvertFromUnicodeProcPtr fromUnicodeProc, ConvertToUnicodeProcPtr toUnicodeProc);#if defined(__cplusplus)}#endif#endif	/* __UNICODEPRIVATE_H */