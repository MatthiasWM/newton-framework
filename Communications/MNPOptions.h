/*	File:		MNPOptions.h	Contains:	Options for the MNPTool	Copyright:	ï¿½ 1992-1993, 1995 by Apple Computer, Inc., all rights reserved.	Derived from v11 internal.*/#if !defined(__MNPOPTIONS_H)#define __MNPOPTIONS_H 1#ifndef FRAM#ifndef	__COMMSERVICES_H#include "CommServices.h"#endif#ifndef __SERIALOPTIONS_H#include "SerialOptions.h"#endif#ifndef	__OPTIONARRAY_H#include "OptionArray.h"#endif// MNP Option Labels#define kCMOMNPAllocate				'mnpa'			/* MNP Allocate */#define kCMOMNPCompression			'mnpc'			/* MNP Compression */#define kCMOMNPDataRate				'eter'			/* End To End Rate */#define kCMOMNPSpeedNegotiation	'mnpn'			/* MNP speed Negotiation */#define kCMOMNPStatistics			'mnps'			/* MNP Statistics */#else// for FRAM// MNP Option Labels#define kCMOMNPAllocate				"mnpa"			/* MNP Allocate */#define kCMOMNPCompression			"mnpc"			/* MNP Compression */#define kCMOMNPDataRate				"eter"			/* end to end rate */#define kCMOMNPSpeedNegotiation	"mnpn"			/* MNP speed Negotiation */#define kCMOMNPStatistics			"mnps"			/* MNP Statistics */#endif	/* not FRAM */#ifndef FRAM/*--------------------------------------------------------------------------------	CCMOMNPAllocate	Specifies if MNP should allocate its memory to be ready for connection.	Only valid at open time.--------------------------------------------------------------------------------*/class CCMOMNPAllocate : public COption{public:					CCMOMNPAllocate();	bool			fMNPAlloc;		// If true, MNP driver allocates its memory										// and is available for connection.										// Default is true.};/*--------------------------------------------------------------------------------	CCMOMNPCompression	Defines the compression type for MNP connections.	This option is required for MNP services	NOTE	The compression type precedence will be (in decending order):			V42bis, MNP7, MNP5, none--------------------------------------------------------------------------------*/typedef int MNPCompressionType;class CCMOMNPCompression : public COption{public:								CCMOMNPCompression();	MNPCompressionType	fCompressionType;			// Default is V.42bis, MNP5, and None};#endif	/* not FRAM */#define	kMNPCompressionNone		0x00000001		// connect with no compression#define	kMNPCompressionMNP5		0x00000002		// connect with MNP 5 compression#define	kMNPCompressionMNP7		0x00000004		// connect with MNP 7 compression	NOT YET SUPPORTED#define	kMNPCompressionV42bis	0x00000008		// connect with V42bis compression#ifndef FRAM/*--------------------------------------------------------------------------------	CCMOMNPDataRate	Data rate, in bits per second, for MNP connection.  All MNP timers are based on this rate.	The data rate must reflect the MNP to MNP connection data rate (end to end).	Not the serial interface speed which may or may not be the same.	This is a required address option for MNP services--------------------------------------------------------------------------------*/class CCMOMNPDataRate : public COption{public:					CCMOMNPDataRate();	ULong			fDataRate;		// default is 2400};/*--------------------------------------------------------------------------------	CCMOMNPSpeedNegotiation	This option controls the MNP speed negotiation.  When this option is	used prior to or when connecting, MNP will negotiate with the remote	end to change speed to the negotiated level.  This feature is implemented	as an Apple specific parameter in the Link Request packet.  This	Apple specific option is not part of the standard MNP implementation.	If the remote end does not support this feature, the LR parameter is	ignored.	NOTE	The MNP Link Request packets are sent at the original connect			speed (set using kCMOSerialIOParms or kCMOSerialBitRate).  When this			option is used, it is assumed speed negotiated is the MNP Data Rate, and			the serial port speed will be set to this value.	The resulting connection speed can be determined by getting the current	value of the kCMOMNPDataRate option after connecting.--------------------------------------------------------------------------------*/class CCMOMNPSpeedNegotiation : public COption{	public:					CCMOMNPSpeedNegotiation();		BitRate	fRequestedSpeed;		// default 57,600 bps, speed rate to set serial};/*--------------------------------------------------------------------------------	CCMOMNPStatistics	MNP Connection Statistics.	Read/Write option.  Read to get current values, write to reset the values.--------------------------------------------------------------------------------*/class CCMOMNPStatistics : public COption{public:				CCMOMNPStatistics();// MNPTool base +D28	ULong		fAdaptValue;				// +0C	default 196, max data packet size, adaptive	ULong		fLTRetransCount;			// +10	default 0, retransmission count for current LT	ULong		fLRRetransCount;			// +14	default 0, retransmission count for current LR	ULong		fRetransTotal;				// +18	default 0, total number of frame retransmissions	ULong		fRcvBrokenTotal;			// +1C	default 0, total number of broken frames received	ULong		fForceAckTotal;			// +20	default 0, total number of forced Acks	ULong		fRcvAsyncErrTotal;		// +24	default 0, total number of serial driver async errors	ULong		fFramesRcvd;				// +28	default 0, total number of frames received	ULong		fFramesXmited;				// +2C	default 0, total number of frames transmitted	ULong		fBytesRcvd;					// +30	default 0, total number of data bytes received	ULong		fBytesXmited;				// +34	default 0, total number of data bytes transmitted	ULong		fWriteBytesIn;				// +38	default 0, user data write byte count before compression	ULong		fWriteBytesOut;			// +3C	default 0, user data write byte count after compression	ULong		fReadBytesIn;				// +40	default 0, user data read byte count before decompression	ULong		fReadBytesOut;				// +44	default 0, user data read byte count after decompression	ULong		fWriteFlushCount;			// +48	default 0, Number of flush calls to compressor// size +4C};#endif	/* not FRAM *//*--------------------------------------------------------------------------------	CCMOMNPDebugConnect	Connect options used for testing.--------------------------------------------------------------------------------*/#ifndef FRAM#define kCMOMNPDebugConnect 'mdct'			/* MNP Debug Connect options */class CCMOMNPDebugConnect : public COption{public:				CCMOMNPDebugConnect();	bool		fARACompatibleMode;		// default false, switch on ARA compatibility	bool		fClass4;						// default true, enable class 4	bool		fStreamModeMax;			// default true, enable class 4 max data	UChar		fMaxCredit;					// default 8, size of flow control window	ULong		fMaxDataSize;				// default 64, size of max data pkt};#else#define kCMOMNPDebugConnect "mdct"			/* MNP Debug Connect options */#endif	/* not FRAM */#endif	/* __MNPOPTIONS_H */