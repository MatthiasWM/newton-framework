/*	File:		CommToolOptions.h	Contains:	Options common to CCommTools.	Copyright:	ï¿½ 1992-1994 by Apple Computer, Inc., all rights reserved.*/#if !defined(__COMMTOOLOPTIONS_H)#define __COMMTOOLOPTIONS_H 1#ifndef	__COMMSERVICES_H#include "CommServices.h"#endif#ifndef	__OPTIONARRAY_H#include "OptionArray.h"#endif#ifdef FRAM	#define kCMOIdleTimer				"citr"	#define kCMOListenTimer				"cltr"	#define kCMOCTConnectInfo			"ctci"	#define kCMOToolSpecificOptions	"ctso"	#define kCMOPassiveClaim			"cpcm"	#define kCMOPassiveState			"cpst"#else	#define kCMOIdleTimer				'citr'			/* CommTool Idle Timer */	#define kCMOListenTimer				'cltr'			/* CommTool Listen Timer */	#define kCMOCTConnectInfo			'ctci'			/* CommTool Connect Info */	#define kCMOToolSpecificOptions	'ctso'			/* CommTool Specific Options */	#define kCMOPassiveClaim			'cpcm'			/* CommTool Passive Claim option */	#define kCMOPassiveState			'cpst'			/* CommTool Passive State option */#endif#ifndef FRAM//--------------------------------------------------------------------------------//	CCMOIdleTimer//		If a connection is "idle" for specified amount of time, tear down connection//--------------------------------------------------------------------------------class CCMOIdleTimer : public COption{public:				CCMOIdleTimer();	ULong		fValue;			// timer value in seconds, default is 120									// timer is disabled if value is 0};//--------------------------------------------------------------------------------//	CCMOListenTimer//		Amount of time to wait for a connection while "listening"//--------------------------------------------------------------------------------class CCMOListenTimer : public COption{public:				CCMOListenTimer();	ULong		fValue;			// timer value in seconds, default is 120									// timer is disabled if value is 0};//--------------------------------------------------------------------------------//	CCMOCTConnectInfo//		Information describing the comm tool connection//--------------------------------------------------------------------------------class CCMOCTConnectInfo : public COption{public:				CCMOCTConnectInfo();	bool		fErrorFree;						// connection guarantees in order, reliable delivery of data	bool		fSupportsCallBack;			// the connect supports call back	bool		fViaAppleTalk;					// connection is using AppleTalk (e.g. net modem)	ULong		fAppleTalkAddr;				// AppleTalk address of entity used for connection, only valid if fViaAppleTalk is true	ULong		fConnectBitsPerSecond;		// approximate throughput of the connection};//--------------------------------------------------------------------------------//	CCMOToolSpecificOptions//		CommTool specific options.  Allows application software to direct an//		option request to a specific level of a endpoint which uses a//		stack of CommTools.  All options following this option in the array//		will only be processed by the specified service type//--------------------------------------------------------------------------------class CCMOToolSpecificOptions : public COption{public:				CCMOToolSpecificOptions();	ULong		fTargetServiceIdentifier;	// service Identifier for which options are targeted};//--------------------------------------------------------------------------------//	CCMOPassiveClaim//		CommTool specific options.  Allows application software to direct an//		option request to a specific level of a endpoint which uses a//		stack of CommTools.  All options following this option in the array//		will only be processed by the specified service type//--------------------------------------------------------------------------------class CCMOPassiveClaim : public COption{public:				CCMOPassiveClaim();	bool		fPassiveClaim;			// If set, indicates resources should be claimed in passive mode};//--------------------------------------------------------------------------------//	CCMOPassiveState//		CommTool specific options.  Allows application software to direct an//		option request to a specific level of a endpoint which uses a//		stack of CommTools.  All options following this option in the array//		will only be processed by the specified service type//--------------------------------------------------------------------------------class CCMOPassiveState : public COption{public:				CCMOPassiveState();	bool		fPassiveState;			// If set, indicates resource useage state is passive (in passive state, they can be given up)};#endif /*notFRAM*/#endif	/* __COMMTOOLOPTIONS_H */