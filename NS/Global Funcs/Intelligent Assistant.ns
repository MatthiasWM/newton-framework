{// Intelligent Assistant	RegTaskTemplate: plainC.FRegTaskTemplate/*template*/,	UnRegTaskTemplate: plainC.FUnRegTaskTemplate/*template*/,	ParseUtter: plainC.FParseUtter/*string*/,	GetMatchedEntries: plainC.DSGetMatchedEntries/*which, entries*/,//	the remaining functions are undocumented, but may be used internally	OrigPhrase: plainC.FOrigPhrase,	PhoneUtility: func(arg1, taskFrame)		begin		if taskFrame.phone exists then			begin			if taskFrame.who = nil then				begin				local phon := FindPossiblePhone(taskFrame.raw);				if phon then					arg1.dialDirect := taskFrame.phrases[phon];				if arg1.candidates = nil then					arg1.rawText := FindPossibleName(taskFrame.noiseWords, taskFrame.origPhrase)				end			else				foreach local2 in taskFrame.phone do					begin					phon := local2[0];					if isa(phon, 'parsed_phone) then						begin						arg1.dialDirect := phon.value;						break						end					else if isa(phon, 'phone_tag) then						begin						if IsSymbol(phon) then							phon := MapSymToFrame(phon);						arg1.phoneTag := phon.tagSymbol;						break						end					end			end		else if not arg1.candidates then			arg1.rawText := FindPossibleName(taskFrame.noiseWords, taskFrame.origPhrase)		end,	GuessAddressee: plainC.FGuessAddressee /* funcPtr: 6874924, numArgs: 1 */,	GuessPerson: func(arg1, taskFrame)		begin		if Length(taskFrame.noiseWords) <> 0 then			arg1.rawText := GlueStrings(taskFrame.noiseWords)		else			arg1.rawText := ScanForWackyName(taskFrame.raw, taskFrame.phrases)		end,	ScanForWackyName: plainC.DSScanForWackyName /* funcPtr: 6873880, numArgs: 2 */,	CleanString: plainC.FCleanString,	SplitString: plainC.FSplitString,	GlueStrings: plainC.FGlueStrings,	StrAssoc: plainC.FStringAssoc/*string, array*/,	PhraseFilter: plainC.FPhraseFilter,	isa: plainC.FIsA,//	many of these have a NS interface but are unused from NS	GenPhrases: plainC.FGeneratePhrases,	GenFullCommands: plainC.FGenFullCommands,	DSDate: plainC.FLexDateLookup/*str*/,	DSTime: plainC.FLexTimeLookup/*str*/,	DSPhone: plainC.FLexPhoneLookup/*str*/,	AddLexFrame: plainC.DSAddLexiconFrame /* funcPtr: 6873874, numArgs: 1 */,	ConstructSubjectLine: plainC.DSConstructSubjectLine /* funcPtr: 6873875, numArgs: 1 */,	FindPossibleName: plainC.DSFindPossibleName /* funcPtr: 6873878, numArgs: 2 */,	FindPossiblePhone: plainC.DSFindPossiblePhone /* funcPtr: 6873879, numArgs: 1 */,	FindPossibleLocation: plainC.DSFindPossibleLocation /* funcPtr: 6877036, numArgs: 2 */,	FilterStrings: plainC.DSFilterStrings /* funcPtr: 6873876, numArgs: 2 */,	FilterStringsAux: plainC.DSFilterStringsAux /* funcPtr: 6873877, numArgs: 2 */,	PrevSubStr: plainC.DSPrevSubStr /* funcPtr: 6877038, numArgs: 2 */,	TagString: plainC.DSTagString /* funcPtr: 7341100, numArgs: 3 */,	ResolveString: plainC.DSResolveString /* funcPtr: 7341101, numArgs: 2 */,}