{// Endpoint Interface	MakeAppletalkOption: func(NBPAddressStr)		begin		local local1 := StrLen(NBPAddressStr);		local local2 := {label: "rout", type: 'address, opCode: 512, data: {arglist: [1, 1, "sltk", local1, NBPAddressStr], typelist: ['struct, 'long, 'long, ['Array, 'char, 4], 'uLong, ['Array, 'unicodechar, 0]]}}		end,	MakePhoneOption: func(phoneStr)		begin		local local1 := StrLen(phoneStr);		local local2 := {label: "rout", type: 'address, opCode: 512, data: {arglist: [3, local1, phoneStr], typelist: [10, 1, 2, [11, 13, 0]]}}		end,	MakeModemOption: func()		begin		local local1, local2, local3, local4, local5, local6, local7;		local1 := ["0", "1", "2", "3"][userConfiguration.modemSoundVolume];		local2 := 60;		if userConfiguration.carrierdelay then			(local2 := userConfiguration.carrierdelay);		local3 := 3;		if userConfiguration.blinddialdelay then			(waitBeforeBlindDial := userConfiguration.blinddialdelay);		local4 := 2;		if userConfiguration.commaDelay then			(local4 := userConfiguration.commaDelay);		local5 := 2;		if if userConfiguration.faxringstoanswer then			userConfiguration.faxringstoanswer > 0 then			(local5 := userConfiguration.faxringstoanswer);		if userConfiguration.currentCountry = 'Canada then			(local6 := 10);		else			(local6 := GetCountryEntry(userConfiguration.currentCountry)[0].countryCode);		local7 := {type: 'option, label: "mdo ", opCode: 512, form: 'template, data: {arglist: [userConfiguration.modemSoundVolume > 0, if not userConfiguration.blinddialing then			not userConfiguration.manualDialing, not userConfiguration.manualDialing, userConfiguration.dialing = 'touchtone, userConfiguration.manualDialing, local1, local2, local3, local4, local5, local6, userConfiguration.cellularConnection], typelist: ['struct, 'boolean, 'boolean, 'boolean, 'boolean, 'boolean, ['Array, 'char, 1], 'byte, 'byte, 'byte, 'byte, 'uLong, 'boolean]}}		end,	Translate: plainC.Ftranslate /* funcPtr: 7013418, numArgs: 4 */,}