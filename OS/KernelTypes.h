/*	File:		KernelTypes.h	Contains:	Kernel types.	Written by:	Newton Research Group.*/#if !defined(__KERNELTYPES_H)#define __KERNELTYPES_H 1#include "Newton.h"/* -----------------------------------------------------------------------------	Memory access permissions.----------------------------------------------------------------------------- */typedef enum{	kNoAccess,	kSuperReadWrite,	kReadOnly,	kReadWrite} Perm;// Special addresses.// The last section is "illegal".#define	kIllegalVAddr	(4095UL * MByte)#define	kIllegalPAddr	(4095UL * MByte)/* -----------------------------------------------------------------------------	Task types.----------------------------------------------------------------------------- */typedef int	Priority;/* -----------------------------------------------------------------------------	Object types.----------------------------------------------------------------------------- */enum ObjectTypes{	kObjectPort,	kObjectTask,	kObjectEnvironment,	kObjectDomain,	kObjectSemList,	kObjectSemGroup,	kObjectSharedMem,	kObjectSharedMemMsg,	kObjectMonitor,	kObjectPhys};/* -----------------------------------------------------------------------------	Port types.----------------------------------------------------------------------------- */enum GetPortTypes{	kGetObjectPort,	kGetNullPort,	kGetNameServerPort};/* -----------------------------------------------------------------------------	Semaphores.----------------------------------------------------------------------------- */enum SemFlags{	kWaitOnBlock,				// ok if we need to block	kNoWaitOnBlock				// don't wait if need to block};#pragma pack(push, 2)typedef struct{	uint16_t	num;	 int16_t	op;} SemOp;							// MUST BE PACKED!#pragma pack(pop)#define MAKESEMLISTITEM(semNum, operation)	(((semNum) << 16) + ((operation) & 0xFFFF))#endif	/* __KERNELTYPES_H */