
//•• Arrays

CDynamicArray : SingleObject
	friend CArrayIterator

CList : CDynamicArray

CSortedList : CList

CArrayIterator : SingleObject
	friend CDynamicArray
	friend CList
	friend CSortedList

CListIterator : CArrayIterator

CListLoop

CBackwardLoop

CItemTester : SingleObject

CItemComparer : CItemTester

//•• Events

CEvent : SingleObject

CSystemEvent : CEvent

CPowerEvent : CSystemEvent

CTimerEvent : CEvent

CEventComparer : CItemComparer

CEventHandlerComparer : CItemComparer

CEventIdleTimer : CTimerElement

CEventHandler : SingleObject
	friend CEventComparer
	friend CEventHandlerComparer
	friend CEventHandlerIterator
	friend CAppWorld

CSystemEventHandler : CEventHandler

CEventHandlerIterator : SingleObject

//•• Timers

CTime

CTimerElement : SingleObject
	friend CTimerQueue

CTimerQueue : SingleObject
	friend CTimerElement

CTimerPort : UPort

UPort : UObject

//•• Shared Memory

CMemObject : SingleObject

USharedMem : UObject

USharedMemMsg : USharedMem

UAsyncMessage

UMsgToken
	friend UPort
	friend UAsyncMessage


//•• Objects

UObject : SingleObject
	friend UMonitor

UMonitor : UObject

UDomain : UObject



#pragma pack(2)

const UShort	kFromMacRomanData[] =
{
	0,		// format
	256,	// unicode table size
	0,		// range table size
	1,		// revision

	0x0000,0x0001,0x0002,0x0003,0x0004,0x0005,0x0006,0x0007,0x0008,0x0009,0x000A,0x000B,0x000C,0x000D,0x000E,0x000F,
	0x0010,0x0011,0x0012,0x0013,0x0014,0x0015,0x0016,0x0017,0x0018,0x0019,0x001A,0x001B,0x001C,0x001D,0x001E,0x001F,
	0x0020,0x0021,0x0022,0x0023,0x0024,0x0025,0x0026,0x0027,0x0028,0x0029,0x002A,0x002B,0x002C,0x002D,0x002E,0x002F,
	0x0030,0x0031,0x0032,0x0033,0x0034,0x0035,0x0036,0x0037,0x0038,0x0039,0x003A,0x003B,0x003C,0x003D,0x003E,0x003F,
	0x0040,0x0041,0x0042,0x0043,0x0044,0x0045,0x0046,0x0047,0x0048,0x0049,0x004A,0x004B,0x004C,0x004D,0x004E,0x004F,
	0x0050,0x0051,0x0052,0x0053,0x0054,0x0055,0x0056,0x0057,0x0058,0x0059,0x005A,0x005B,0x005C,0x005D,0x005E,0x005F,
	0x0060,0x0061,0x0062,0x0063,0x0064,0x0065,0x0066,0x0067,0x0068,0x0069,0x006A,0x006B,0x006C,0x006D,0x006E,0x006F,
	0x0070,0x0071,0x0072,0x0073,0x0074,0x0075,0x0076,0x0077,0x0078,0x0079,0x007A,0x007B,0x007C,0x007D,0x007E,0x007F,

	0x00C4,0x00C5,0x00C7,0x00C9,0x00D1,0x00D6,0x00DC,0x00E1,0x00E0,0x00E2,0x00E4,0x00E3,0x00E5,0x00E7,0x00E9,0x00E8,
	0x00EA,0x00EB,0x00ED,0x00EC,0x00EE,0x00EF,0x00F1,0x00F3,0x00F2,0x00F4,0x00F6,0x00F5,0x00FA,0x00F9,0x00FB,0x00FC,
	0x2020,0x00B0,0x00A2,0x00A3,0x00A7,0x2022,0x00B6,0x00DF,0x00AE,0x00A9,0x2122,0x00B4,0x00A8,0x2260,0x00C6,0x00D8,
	0x221E,0x00B1,0x2264,0x2265,0x00A5,0x00B5,0x2202,0x2211,0x220F,0x03C0,0x222B,0x00AA,0x00BA,0x2126,0x00E6,0x00F8,
	0x00BF,0x00A1,0x00AC,0x221A,0x0192,0x2248,0x2206,0x00AB,0x00BB,0x2026,0x00A0,0x00C0,0x00C3,0x00D5,0x0152,0x0153,
	0x2013,0x2014,0x201C,0x201D,0x2018,0x2019,0x00F7,0x25CA,0x00FF,0x0178,0x2044,0x00A4,0x2039,0x203A,0xFB01,0xFB02,
	0x2021,0x00B7,0x201A,0x201E,0x2030,0x00C2,0x00CA,0x00C1,0x00CB,0x00C8,0x00CD,0x00CE,0x00CF,0x00CC,0x00D3,0x00D4,
	0xF7FF,0x00D2,0x00DA,0x00DB,0x00D9,0x0131,0x02C6,0x02DC,0x00AF,0x02D8,0x02D9,0x02DA,0x00B8,0x02DD,0x02DB,0x02C7
};

const struct
{
	const UShort	header[4];
	const UShort	ranges[28*3] __attribute__((packed));
	const UChar		codes[] __attribute__((packed));
} kToMacRomanData =
{
{	4,		// format
	0,		// unicode table size
	28,	// range table size
	1,		// revision
},
{
	0x007F,0x00FF,0x0131,0x0153,0x0178,0x0192,0x02C7,0x02DD,
	0x03C0,0x2026,0x2030,0x203A,0x2044,0x2122,0x2126,0x2202,
	0x2206,0x2211,0x221A,0x221E,0x222B,0x2248,0x2260,0x2265,
	0x25CA,0xF7FF,0xFB02,0xFFFF,

	0x0000,0x00A0,0x0131,0x0152,0x0178,0x0192,0x02C6,0x02D8,
	0x03C0,0x2013,0x2030,0x2039,0x2044,0x2122,0x2126,0x2202,
	0x2206,0x220F,0x221A,0x221E,0x222B,0x2248,0x2260,0x2264,
	0x25CA,0xF7FF,0xFB01,0xFFFF,

	0x0000,0xFFE0,0xFFAF,0xFF8F,0xFF6B,0xFF52,0xFE1F,0xFE0F,
	0xFD2D,0xE0DB,0xE0D2,0xE0CA,0xE0C1,0xDFE4,0xDFE1,0xDF06,
	0xDF03,0xDEFB,0xDEF3,0xDEF0,0xDEE4,0xDEC8,0xDEB1,0xDEAE,
	0xDB4A,0x0916,0x0615,0x0119
},
{
	0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0F,	/*	0000 - 007F	*/
	0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,
	0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,0x2E,0x2F,
	0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,0x3E,0x3F,
	0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4A,0x4B,0x4C,0x4D,0x4E,0x4F,
	0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5A,0x5B,0x5C,0x5D,0x5E,0x5F,
	0x60,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,
	0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x7B,0x7C,0x7D,0x7E,0x7F,
																												/*	0080 - 009F don’t exist */
	0xCA,0xC1,0xA2,0xA3,0xDB,0xB4,0x1A,0xA4,0xAC,0xA9,0xBB,0xC7,0xC2,0x1A,0xA8,0xF8,	/*	00A0 - 00FF	*/
	0xA1,0xB1,0x1A,0x1A,0xAB,0xB5,0xA6,0xE1,0xFC,0x1A,0xBC,0xC8,0x1A,0x1A,0x1A,0xC0,
	0xCB,0xE7,0xE5,0xCC,0x80,0x81,0xAE,0x82,0xE9,0x83,0xE6,0xE8,0xED,0xEA,0xEB,0xEC,
	0x1A,0x84,0xF1,0xEE,0xEF,0xCD,0x85,0x1A,0xAF,0xF4,0xF2,0xF3,0x86,0x1A,0x1A,0xA7,
	0x88,0x87,0x89,0x8B,0x8A,0x8C,0xBE,0x8D,0x8F,0x8E,0x90,0x91,0x93,0x92,0x94,0x95,
	0x1A,0x96,0x98,0x97,0x99,0x9B,0x9A,0xD6,0xBF,0x9D,0x9C,0x9E,0x9F,0x1A,0x1A,0xD8,
																												/*	individual mappings… */
	0xF5,										/*	0131			*/
	0xCE,0xCF,								/*	0152 - 0153	*/
	0xD9,										/*	0178			*/
	0xC4,										/*	0192			*/
	0xF6,0xFF,								/*	02C6 - 02C7	*/
	0xF9,0xFA,0xFB,0xFE,0xF7,0xFD,	/*	02D8 - 02DD	*/
	0xB9,										/*	03C0			*/
	0xD0,0xD1,0x1A,0x1A,0x1A,			/*	2013 - 2026	*/
	0xD4,0xD5,0xE2,0x1A,0xD2,0xD3,0xE3,0x1A,
	0xA0,0xE0,0xA5,0x1A,0x1A,0x1A,0xC9,
	0xE4,										/*	2030			*/
	0xDC,0xDD,								/*	2039 - 203A	*/
	0xDA,										/*	2044			*/
	0xAA,										/*	2122			*/
	0xBD,										/* 2126			*/
	0xB6,										/*	2202			*/
	0xC6,										/* 2206			*/
	0xB8,0x1A,0xB7,						/*	220F - 2211	*/
	0xC3,										/* 221A			*/
	0xB0,										/* 221E			*/
	0xBA,										/*	222B			*/
	0xC5,										/*	2248			*/
	0xAD,										/*	2260			*/
	0xB2,0xB3,								/*	2264 - 2265	*/
	0xD7,										/*	25CA			*/
	0xF0,										/*	F7FF			*/
	0xDE,0xDF,								/*	FB01 - FB02	*/
	0x1A										/*	FFFF			*/
}
};


const UShort	kFromASCIIData[] =
{
	0,		// format
	256,	// unicode table size
	0,		// range table size
	1,		// revision

	0x0000,0x0001,0x0002,0x0003,0x0004,0x0005,0x0006,0x0007,0x0008,0x0009,0x000A,0x000B,0x000C,0x000D,0x000E,0x000F,
	0x0010,0x0011,0x0012,0x0013,0x0014,0x0015,0x0016,0x0017,0x0018,0x0019,0x001A,0x001B,0x001C,0x001D,0x001E,0x001F,
	0x0020,0x0021,0x0022,0x0023,0x0024,0x0025,0x0026,0x0027,0x0028,0x0029,0x002A,0x002B,0x002C,0x002D,0x002E,0x002F,
	0x0030,0x0031,0x0032,0x0033,0x0034,0x0035,0x0036,0x0037,0x0038,0x0039,0x003A,0x003B,0x003C,0x003D,0x003E,0x003F,
	0x0040,0x0041,0x0042,0x0043,0x0044,0x0045,0x0046,0x0047,0x0048,0x0049,0x004A,0x004B,0x004C,0x004D,0x004E,0x004F,
	0x0050,0x0051,0x0052,0x0053,0x0054,0x0055,0x0056,0x0057,0x0058,0x0059,0x005A,0x005B,0x005C,0x005D,0x005E,0x005F,
	0x0060,0x0061,0x0062,0x0063,0x0064,0x0065,0x0066,0x0067,0x0068,0x0069,0x006A,0x006B,0x006C,0x006D,0x006E,0x006F,
	0x0070,0x0071,0x0072,0x0073,0x0074,0x0075,0x0076,0x0077,0x0078,0x0079,0x007A,0x007B,0x007C,0x007D,0x007E,0x007F,

	0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,
	0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,
	0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,
	0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,
	0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,
	0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,
	0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,
	0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A,0x001A
};

const UShort	kToASCIIData[] =
{
	4,		// format
	0,		// unicode table size
	23,	// range table size
	1,		// revision

	0x007F,0x00FF,0x0131,0x0153,0x0178,0x0192,0x02C7,0x02DD,
	0x03C0,0x2026,0x2030,0x203A,0x2044,0x2126,0x2206,0x2211,
	0x221E,0x222B,0x2248,0x2265,0x25CA,0xF7FF,0xFB02,

	0x0000,0x00A0,0x0131,0x0152,0x0178,0x0192,0x02C6,0x02D8,
	0x03C0,0x2013,0x2030,0x2039,0x2044,0x2122,0x2202,0x220F,
	0x221A,0x222B,0x2248,0x2260,0x25CA,0xF7FF,0xFB01,

	0x0000,0xFFE0,0xFFAF,0xFF8F,0xFF6B,0xFF52,0xFE1F,0xFE0F,
	0xFD2D,0xE0DB,0xE0D2,0xE0CA,0xE0C1,0xDFE4,0xDF09,0xDF01,
	0xDEF9,0xDEED,0xDED1,0xDEBA,0xDB56,0x0922,0x0621
};
const UChar		kToASCIICodes[] =
{
	0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B,0x0C,0x0D,0x0E,0x0F,	/*	0000 - 007F	*/
	0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1A,0x1B,0x1C,0x1D,0x1E,0x1F,
	0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2A,0x2B,0x2C,0x2D,0x2E,0x2F,
	0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x3B,0x3C,0x3D,0x3E,0x3F,
	0x40,0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4A,0x4B,0x4C,0x4D,0x4E,0x4F,
	0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5A,0x5B,0x5C,0x5D,0x5E,0x5F,
	0x60,0x61,0x62,0x63,0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6C,0x6D,0x6E,0x6F,
	0x70,0x71,0x72,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x7B,0x7C,0x7D,0x7E,0x7F,
																												/*	0080 - 009F don’t exist */
	0x20,0x21,0x63,0x4C,0x20,0x20,0x1A,0x20,0x20,0x20,0x61,0x22,0x20,0x1A,0x20,0x20,	/*	00A0 - 00FF	*/
	0x20,0x20,0x1A,0x1A,0x20,0x75,0x20,0x20,0x20,0x1A,0x6F,0x22,0x1A,0x1A,0x1A,0x3F,
	0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x43,0x45,0x45,0x45,0x45,0x49,0x49,0x49,0x49,
	0x1A,0x4E,0x4F,0x4F,0x4F,0x4F,0x4F,0x1A,0x4F,0x55,0x55,0x55,0x55,0x1A,0x1A,0x73,
	0x61,0x61,0x61,0x61,0x61,0x61,0x61,0x63,0x65,0x65,0x65,0x65,0x69,0x69,0x69,0x69,
	0x1A,0x6E,0x6F,0x6F,0x6F,0x6F,0x6F,0x2F,0x6F,0x75,0x75,0x75,0x75,0x1A,0x1A,0x79,
																												/*	individual mappings… */
	0x69,0x4F,0x6F,0x59,0x66,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x2D,0x2D,
	0x1A,0x1A,0x1A,0x27,0x27,0x27,0x1A,0x22,0x22,0x22,0x1A,0x20,0x20,0x2A,0x1A,0x1A,
	0x1A,0x20,0x20,0x3C,0x3E,0x2F,0x20,0x1A,0x1A,0x1A,0x20,0x20,0x1A,0x1A,0x1A,0x20,
	0x20,0x1A,0x20,0x20,0x1A,0x1A,0x1A,0x20,0x20,0x20,0x20,0x1A,0x1A,0x1A,0x20,0x20,
	0x20,0x20,0x20,0x20,0xBA,0xBA
};

